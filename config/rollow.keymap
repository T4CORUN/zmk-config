/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definitions out toggle
#define QWERTY  0
#define NUMBER  1
#define NAVI    2
#define FUNC    3
#define ADJUST  4

// key alias definitions
#define ___x___ &none
#define _______ &trans

//Layer Taps
//#define NAV_TAB &lt     NAVI    TAB
//#define NUM_BSP &lt     NUMBER  BSPC
//#define FUN_Z   &lt     FUNC    Z
//#define AD_FSLH &lt     ADJUST  FSLH

//GACS Home Row Mods QWERTY
#define LGUI_A  &mt     LGUI    A
#define LALT_S  &mt     LALT    S
#define LCTRL_D &mt     LCTRL   D
#define LSHFT_F &mt     LSHFT   F

#define RSHFT_J &mt     RSHFT   J
#define RCTRL_K &mt     RCTRL   K
#define RALT_L  &mt     RALT    L
#define RGUI_QT &mt     RGUI    SQT

//Shortcuts
#define S_UNDO  &kp LC(Z)
#define S_CUT   &kp LC(X)
#define S_COPY  &kp LC(C)
#define S_PASTE &kp LC(V)
#define S_REDO  &kp LC(Y)

//Shortening Their codes to seven char
#define PAUBRK  &kp PAUSE_BREAK
#define BT1     &bt BT_SEL_0
#define BT2     &bt BT_SEL_1
#define BT3     &bt BT_SEL_2
#define BT4     &bt BT_SEL_3
#define BT5     &bt BT_SEL_4

//Behavior Configuration
#define TAPPING_TERM 200

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

/ {
        chosen {
                zmk,kscan = &kscan0;
		zmk,matrix_transform = &five_column_transform;
	};

        behaviors {
                TD_LBKT: tap_dance_left_bracket {
                    compatible = "zmk,behavior-tap-dance";
                    label = "tap_dance_left_bracket";
                    #binding-cells = <0>;
                    tapping-term-ms = <TAPPING_TERM>;
                    bindings = <&kp LPAR>, <&kp LBKT>, <&kp LS(LBKT)>;
                };
        
                TD_RBKT: tap_dance_right_bracket {
                    compatible = "zmk,behavior-tap-dance";
                    label = "tap_dance_right_bracket";
                    #binding-cells = <0>;
                    tapping-term-ms = <TAPPING_TERM>;
                    bindings = <&kp RPAR>, <&kp RBKT>, <&kp LS(RBKT)>;
                };
        };


        keymap {
                compatible = "zmk,keymap";

                default_layer {

                /*
                *test
                *   ,----------------------------------.    ,----------------------------------.
                *   |   Q  |   W  |   E  |   R  |   T  |    |   Y  |   U  |   I  |   O  |   P  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   |   A  |   S  |   D  |   F  |   G  |    |   H  |   J  |   K  |   L  |   '  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   |   Z  |   X  |   C  |   V  |   B  |    |   N  |   M  |   ,  |   .  |   /  |
                *   `------+------+------+------+------+    +------+------+------+------+------'
                *                 |      |NUMBSP| Shft |    | Spc  |NAVTAB| mute |
                *                 `------+------+------'    `------+------+------'
                *
                *   Encoder Left: Up <-> Down
                *   Encoder Right: Left <-> Right
                */

                        bindings = <
                                &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P
                                &mt LGUI A      &mt LALT S      &mt LCTRL D     &mt LSHFT F     &kp G           &kp H           &mt RSHFT J     &mt RCTRL K     &mt RALT L      &mt RGUI SQT
                                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH
                                                                &kp LGUI        &lt NUMBER BSPC &kp LSHFT       &kp SPACE       &lt NAVI TAB    &kp RALT
                        >;
                
                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
                };

                number_layer {

                /*
                *
                *   ,----------------------------------.    ,----------------------------------.
                *   | Esc  | Ent  | Tab  | Bksp |   `  |    | tLBKT|   7  |   8  |   9  | tRBKT|
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   | GUI  | Alt  | Ctrl | Shft |   .  |    |   ;  |   4  |   5  |   6  |   =  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   | Undo | Cut  | Copy | Pste | Redo |    |   -  |   1  |   2  |   3  |   \  |
                *   `------+------+------+------+------+    +------+------+------+------+------'
                *                 |      |LyrTap|      |    | Spc  |   0  | mute |
                *                 `------+------+------'    `------+------+------'
                *
                *   Encoder Left: Up <-> Down
                *   Encoder Right: Left <-> Right
                */

                        bindings = <
                                &kp ESC         &none           &none           &none           &kp GRAVE       &none           &kp N7          &kp N8          &kp N9          &none
                                &kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp DOT         &kp SEMI        &kp N4          &kp N5          &kp N6          &kp EQUAL
                                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp MINUS       &kp N1          &kp N2          &kp N3          &kp BSLH
                                                                &none           &trans          &none           &kp SPACE       &kp N0          &kp C_MUTE
                        >;

                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
                };

                nav_layer {

                /*
                *
                *   ,----------------------------------.    ,----------------------------------.
                *   | Esc  | Home | Up   | End  | PgUp |    |      |      |      |      |      |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   | Caps | Left | Down | Right| PgDn |    | Del  | Shft | Ctrl | Alt  | GUI  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   | Undo | Cut  | Copy | Pste | Redo |    |      | Spc  | Tab  |      | App  |
                *   `------+------+------+------+------+    +------+------+------+------+------'
                *                 |      | Bpsc | Ent  |    |      |LyrTap|      |
                *                 `------+------+------'    `------+------+------'
                *
                *   Encoder Left: Up <-> Down
                *   Encoder Right: Left <-> Right
                */
        
                        bindings = <
                                &kp ESC         &kp HOME        &kp UP          &kp END         &kp PG_UP       &none         &none         &none          &none          &none
                                &kp CAPS        &kp LEFT        &kp DOWN        &kp RIGHT       &kp PG_DN       &kp DEL       &kp RSHFT     &kp RCTRL      &kp RALT       &kp RGUI
                                &kp Z           &kp X           &kp C           &kp V           &kp B           &none         &kp SPACE     &kp TAB        &none          &kp K_APP
                                                                &none           &kp BSPC        &kp ENTER       &none         &trans        &kp C_MUTE
                        >;

                        sensor-bindings = <&inc_dec_kp DEL BPSC &inc_dec_kp RIGHT LEFT>;
                };

                function_layer {

                /*
                *
                *   ,----------------------------------.    ,----------------------------------.
                *   | Esc  | Ent  | Tab  | Bksp |   `  |    |PrtScr|  F7  |  F8  |  F9  | F12  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   | GUI  | Alt  | Ctrl | Shft |   .  |    |ScrLck|  F4  |  F5  |  F6  | F11  |
                *   +------+------+------+------+------|    +------+------+------+------+------+
                *   |LyrTap|      |      |      |      |    |PauBrk|  F1  |  F2  |  F3  | F10  |
                *   `------+------+------+------+------+    +------+------+------+------+------'
                *                 |      |      |      |    |      |      | mute |
                *                 `------+------+------'    `------+------+------'
                *
                *   Encoder Left: Up <-> Down
                *   Encoder Right: Left <-> Right
                */

                        bindings = <
                                &kp ESC         &none           &none           &none           &none           &kp PSCRN       &kp F7      &kp F8      &kp F9      &kp F12
                                &kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp DOT         &kp SEMI        &kp F4      &kp F5      &kp F6      &kp F11
                                &trans          &none           &none           &none           &none           &kp PAUBRK      &kp F1      &kp F2      &kp F3      &kp F10
                                                                &none           &none           &none           &none           &none       &kp C_MUTE
                        >;

                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        };
};
